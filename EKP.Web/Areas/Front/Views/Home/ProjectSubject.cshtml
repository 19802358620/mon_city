<div class="portlet light">
    <div class="portlet-title tabbable-line">
        <div class="tools">
            <button type="button" class="btn blue seeScore" style="display:none" onclick="btnSeeScore()">
                <i class="fa fa-eye"></i>
                查看成绩
            </button>
            <button type="button" class="btn blue errorRepeatSubject" style="display:none" onclick="btnErrorRepeatSubject()">
                <i class="fa fa-history"></i>
                错题重做
            </button>
        </div>
        <ul class="nav nav-tabs float-left" id="projectSubjectTabBox"></ul>
    </div>
    <div class="portlet-body" id="projectSubjectConBox">
        <div class="tab-pane fade" id="tab-1">
            <div id="detectionSubjectBox" class="exercises">
                <h2 id="totalScoreBox" style="display:none">
                    总分: <span class="color-red">{totalScore}</span> 分, 本次得分: <span class="color-red">{testScore}</span> 分
                </h2>
                <div class="exercises-list">
                    <div class="load" style="display:none">
                        <img src="/Areas/Adm/Images/loading_5.gif">
                    </div>
                    <div class="empty" style="display:none">
                        当前不存在题目！
                    </div>
                    <div class="con" style="display:none">
                        <ul class="subjectBox" id="subjectBox"></ul>
                        <div class="row">
                            <div class="col-md-9">
                                <button type="button" class="btn blue saveSubject" style="display: none" onclick="btnSaveSubject()">
                                    <i class="fa fa-save"></i>
                                    保存
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<link href="/Areas/Base/Content/subject.css" rel="stylesheet" />
<script src="/Areas/Base/Scripts/subject.js"></script>
<script>
    var projectSubject = null;
    var isShowAnswer = true;
    var status = parseInt(gloQs.status || 1);//status：1：做题;2：错题重做3：查看成绩;

    //初始化
    function initProjectSubject(projectId) {
        //加载树
        $.ajax({
            type: "POST",
            dataType: "json",
            url: getUrl("Detection", "Tree", { area: "Adm", projectId: projectId }),
            beforeSend: function () {
            },
            success: function (data) {
                //初始化tab
                $(data).each(function(i, node) {
                    $("#projectSubjectTabBox").append('<li><a href="#tab-1" detectionId="{id}" data-toggle="tab">{text}</a></li>'.format(node));
                });

                //tab切换
                $('#projectSubjectTabBox a[data-toggle="tab"]').on('shown.bs.tab', function (e) {
                    var detectionId = $(e.target).attr("detectionId");
                    $("#projectSubjectTabBox").attr("detectionId", detectionId);
                    $(window).trigger("resize");

                    if (status == 1) {
                        initSubjects(detectionId);
                    }
                    else if (status == 2) {
                        initSubjects(detectionId, function (data) {
                            if (!projectSubject.detectionHand) {
                                layer.alert("你还未作答，无法查看成绩.");
                                return;
                            }

                            $("#subjectBox .subject_item").each(function (i, subjectItem) {
                                var subjectId = $(subjectItem).attr("subjectId");
                                $(projectSubject.subjects.Rows).each(function (j, subject) {
                                    var replyQuestion = null;
                                    $(projectSubject.detectionHand.DetectionReplys).each(function (j, detectionReply) {
                                        if (detectionReply.SubjectId == subjectId && detectionReply.IsRight == false) {
                                            replyQuestion = detectionReply;
                                            return false;
                                        }
                                    });
                                    if (!replyQuestion) {
                                        $(subjectItem).hide();
                                    }
                                });
                            });
                        });
                    }
                    else if (status == 3) {
                        $("#totalScoreBox").hide();
                        initSubjects(detectionId, function (data) {
                            if (!projectSubject.detectionHand) {
                                layer.alert("你还未作答，无法查看成绩.");
                                return;
                            }

                            layer.msg('请稍等, 正在查询成绩...', {
                                icon: 16,
                                shade: 0.01
                            });

                            //0.5秒后执行
                            setTimeout(function () {
                                var testScore = 0, totalScore = 0;
                                $("#subjectBox .subject_item").each(function (i, subjectItem) {
                                    var subjectId = $(subjectItem).attr("subjectId");
                                    var detectionReply = null;
                                    $(projectSubject.detectionHand.DetectionReplys).each(function (j, dr) {
                                        if (dr.SubjectId == subjectId) {
                                            detectionReply = dr;
                                            return false;
                                        }
                                    });
                                    $(projectSubject.subjects.Rows).each(function (j, subject) {
                                        if (subject.Id == subjectId) {
                                            ztsubject.checkAnswer({
                                                subject_item: subjectItem,
                                                subject: subject,
                                                isShowCheck: true,
                                                isShowAnswer: isShowAnswer,
                                                isShowAnalysis: isShowAnswer,
                                                checkCallback: function (isRight) {
                                                    //显示得分
                                                    detectionReply.Score = detectionReply.Score == null ? "0" : detectionReply.Score;
                                                    detectionReply.MaxScore = subject.Score;
                                                    $(subjectItem).find(".sunject-answer .isRight").hide();
                                                    $(subjectItem).find(".sunject-answer .isRight").after(
                                                        "<h4>" +
                                                        "<span class=\"pre\">本题得分：</span><span class=\"con\">{Score} 分（满分：{MaxScore}分）</span>".format(detectionReply) +
                                                        "</h4 > ");

                                                    testScore += parseFloat(detectionReply.Score || 0);
                                                    totalScore += parseFloat(subject.Score || 0);
                                                }
                                            });
                                        }
                                    });
                                });
                                $("#totalScoreBox").replaceFormat({ totalScore: totalScore, testScore: testScore }).show();
                                layer.closeAll();
                            }, 500);
                        });
                    }
                }); 
                $("#projectSubjectTabBox li a:first").tab('show');
            }
        });
    }

    //初始化试题
    function initSubjects(detectionId, callBack) {
        $.ajax({
            type: "post",
            dataType: "json",
            data: { detectionId: detectionId, userId: appInfo.loginUser && appInfo.loginUser.Id  },
            url: getUrl("Home", "ProjectSubject"),
            beforeSend: function () {
                $("#detectionSubjectBox .load").show();
                $("#detectionSubjectBox .empty").hide();
                $("#detectionSubjectBox .con").hide();
                $("#detectionSubjectBox .subjectBox").html("");
            },
            success: function (data) {
                $("#detectionSubjectBox .load").hide();
                projectSubject = data;

                if (projectSubject.detectionHand) {
                    $(".tools .seeScore, .tools .errorRepeatSubject").show();
                }

                if (projectSubject.detectionSetting && projectSubject.detectionSetting.ViewAnswerMode == "NotAllowed") {
                    isShowAnswer = false;
                }

                //显示题目
                var subjects = projectSubject.subjects.Rows;
                if (subjects.length) {
                    $("#detectionSubjectBox .empty").hide();
                    $("#detectionSubjectBox .con").show();
                    $(subjects).each(function (i, subject) {
                        var subjectItem = $("<li class='subject_item' subjectId='{Id}' type='{Type}'></li>".format(subject));
                        $("#subjectBox").append(subjectItem);

                        //初始化题目
                        ztsubject.init({
                            box: $(subjectItem),
                            subject: subject,
                            sNum: i + 1,
                            afterInit: function (opts) {
                                if (status == 2 && isShowAnswer) {
                                    $(subjectItem).find(".subject-tool").show();
                                    $(subjectItem).find(".subject-tool span").append(
                                        '<button class="btn btn-sm btn-primary btn-add" onclick="btnCheckSubject(this)"><i class= "fa fa-eye"></i> 核对答案</button >'.format(subject));
                                }
                            },
                            afterQuestionInit: function (sOpts, qdata, questionBox) {
                                if (data.detectionHand) {
                                    $(data.detectionHand.DetectionReplys).each(function (j, detectionReply) {
                                        if (detectionReply.QuestionId == qdata.Id) {
                                            if (qdata.Type == "single") {
                                                $(questionBox).find(".answer_q[value='{0}']".format(detectionReply.Value)).attr("checked", true);
                                            }
                                            else if (qdata.Type == "multi") {
                                                $(questionBox).find(".answer_q").each(function (i, aq) {
                                                    if (detectionReply.Value.indexOf($(aq).val()) > -1) {
                                                        $(aq).attr("checked", true);
                                                    }
                                                });
                                            }
                                            else if (qdata.Type == "bit") {
                                                $(questionBox).find(".answer_q[value='{0}']".format(detectionReply.Value)).attr("checked", true);
                                            }
                                            else if (qdata.Type == "fill") {
                                                var replys = JSON.parse(detectionReply.Value);
                                                $(subjectItem).find(".subject-input.answer_q").each(function (i, aq) {
                                                    if (replys.length >= i + 1) {
                                                        $(aq).val(replys[i]);
                                                    }
                                                });
                                            }
                                            else if (qdata.Type == "shortAnswer") {
                                                var kindEditor = $(questionBox).find(".kindeditor.answer_q");
                                                KindEditor.html(kindEditor, detectionReply.Value);
                                            }
                                        }
                                    });
                                }
                            }
                        });
                    });
                }
                else {
                    $("#detectionSubjectBox .empty").show();
                    $("#detectionSubjectBox .con").hide();
                }

                //显示按钮
                if (!data.detectionHand) {
                    $(".saveSubject").show();
                }

                if (callBack) {
                    callBack(data);
                }
            }
        });
    }

    //保存
    function btnSaveSubject() {
        layer.confirm("此操作不可撤销，确定要保存吗？", {
            title: "",
            btn: ['确认', '取消']
        }, function (v, box) {
            layer.closeAll();

            synSubmitAll("Examed", function (data) {
                $dialogShow(data);
                if (data.Type == "Success") {
                    setTimeout(function () {
                        var detectionId = $("#projectSubjectTabBox").attr("detectionId");
                        status = 1;
                        initSubjects(detectionId);
                    }, 500);
                }
            });
        });
    }

    //保存答卷
    function synSubmitAll(status, callback) {
        var detectionId = $("#projectSubjectTabBox").attr("detectionId");

        //同步富文本的值
        for (var i in KindEditor.instances) {
            if (KindEditor.instances.hasOwnProperty(i)) {
                KindEditor.instances[i].sync();
            }
        }

        //提交
        var models = new Array();
        $("#subjectBox .subject_item").find(".question-box").each(function (i, question_box) {
            var subject_item = $(question_box).closest(".subject_item");
            var replys = zttp.subjectReply(subject_item);
            $(replys).each(function (i, reply) {
                models.push({
                    SubjectId: $(subject_item).attr("subjectId"),
                    QuestionId: reply.questionId,
                    Value: reply.value
                });
            });
        }); 
        $.ajax({
            type: "post",
            dataType: "json",
            data: {
                models: models,
                detectionId: detectionId,
                status: status
            },
            url: getUrl("DetectionReply", "SubmitAll", { area: "Adm" }),
            success: function (data) {
                if (callback) {
                    callback(data);
                }
            }
        });
    }

    //错题重做
    function btnErrorRepeatSubject() {
        window.location.href = getUrl("Home", "ProjectGuidance", { status: 2 });
    }

    //查看成绩
    function btnSeeScore() {
        window.location.href = getUrl("Home", "ProjectGuidance", { status: 3 });
    }

    //核对答案（全部）
    function btnCheckAllSubject() {
        var detectionId = $("#projectSubjectTabBox").attr("detectionId");
        initSubjects(detectionId, function(data) {
            layer.msg('请稍等...', {
                icon: 16,
                shade: 0.01
            });

            //0.5秒后执行
            setTimeout(function () {
                $("#subjectBox .subject_item").each(function (i, subjectItem) {
                    var subjectId = $(subjectItem).attr("subjectId");
                    $(projectSubject.subjects.Rows).each(function (j, subject) {
                        if (subject.Id == subjectId) {
                            ztsubject.checkAnswer({
                                subject_item: subjectItem,
                                subject: subject,
                                isShowCheck: true,
                                isShowAnswer: isShowAnswer,
                                isShowAnalysis: isShowAnswer
                            });
                        }
                    });
                });

                layer.closeAll();
            }, 500);
        });
    }

    //核对答案（某道题）
    function btnCheckSubject(btn) {
        layer.msg('请稍等...', {
            icon: 16,
            shade: 0.01
        });

        setTimeout(function () {
            var subjectItem = $(btn).closest(".subject_item");
            var subjectId = $(subjectItem).attr("subjectId");
            $(projectSubject.subjects.Rows).each(function (j, subject) {
                if (subject.Id == subjectId) {
                    ztsubject.checkAnswer({
                        subject_item: subjectItem,
                        subject: subject,
                        isShowCheck: true,
                        isShowAnswer: isShowAnswer,
                        isShowAnalysis: isShowAnswer
                    });
                }
            });

            layer.closeAll();
        }, 500);
        
    }
</script>
